/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.Document;
import java.io.FileOutputStream;
import java.io.FileWriter;
import javax.swing.JFrame;

public class Payment extends javax.swing.JFrame {

    public Payment() {
        initComponents();
        populateCheckOutTable();
        setSize(1580, 710);
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Payment");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(630, 30, 250, 54);

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("Customer ID ");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(520, 110, 140, 31);

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });
        getContentPane().add(jTextField1);
        jTextField1.setBounds(690, 110, 220, 40);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Mobile No", "Nationality", "Gender", "Email", "ID Proof", "Address", "Check-in Date", "Bed Type", "Room Type", "Room No", "Room Price", "Price Per Day", "No of Days Stay", "Check-out Date", "Total Amount"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(19, 171, 1500, 400);

        jButton1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton1.setText("Generate Bill");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(930, 100, 168, 50);

        jButton2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jButton2.setText("Exit");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2);
        jButton2.setBounds(720, 600, 100, 50);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/WhatsApp Image 2023-06-18 at 19.34.11.jpeg"))); // NOI18N
        getContentPane().add(jLabel3);
        jLabel3.setBounds(0, 0, 1580, 670);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void populateCheckOutTable() {
        try {
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotelmanagementsystem", "root", "SarahQasim123");

            String selectQuery = "SELECT * FROM CustCheckIn";
            PreparedStatement selectStatement = conn.prepareStatement(selectQuery);
            ResultSet rs = selectStatement.executeQuery();

            String[] columnNames = {"CustomerID", "Name", "Mobile No", "Nationality", "Gender", "Email", "ID Proof", "Address", "Check-In Date", "Bed Type", "Room Type", "Room No", "Room Price", "Price Per Day", "No Of Days Stay", "Check-Out Date", "Total Amount"};
            DefaultTableModel model = new DefaultTableModel(columnNames, 0);

            while (rs.next()) {
                String customerID = rs.getString("CustomerID");
                String name = rs.getString("Name");
                String mobileNo = rs.getString("MobileNo");
                String nationality = rs.getString("Nationality");
                String gender = rs.getString("Gender");
                String email = rs.getString("Email");
                String idProof = rs.getString("IDProof");
                String address = rs.getString("Address");
                String checkInDate = rs.getString("CheckInDate");
                String bedType = rs.getString("BedType");
                String roomType = rs.getString("RoomType");
                String roomNo = rs.getString("RoomNo");
                double roomPrice = rs.getDouble("RoomPrice");
                double pricePerDay = rs.getDouble("PricePerDay");
                int noOfDaysStay = rs.getInt("NoOfDaysStay");
                String checkOutDate = rs.getString("CheckOutDate");
                double totalAmount = rs.getDouble("TotalAmount");
                jTable1.setModel(model);
                Object[] rowData = {customerID, name, mobileNo, nationality, gender, email, idProof, address, checkInDate, bedType, roomType, roomNo, roomPrice, pricePerDay, noOfDaysStay, checkOutDate, totalAmount};
                model.addRow(rowData);
            }

            JTable table = new JTable(model);
            conn.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e);
            }
    }
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            int customerID = Integer.parseInt(jTextField1.getText()); 
            Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/hotelmanagementsystem", "root", "SarahQasim123");
            String sql = "SELECT * FROM CustCheckIn WHERE CustomerID = ?";
            PreparedStatement statement = conn.prepareStatement(sql);
            statement.setInt(1, customerID);

            ResultSet resultSet = statement.executeQuery();
            if (resultSet.next()) {
                
                String receiptText = "\t\tSky View Hotel Management System\n";
                receiptText += "----------------------------------------------------------------\n";
                receiptText += "\t\t\t Receipt \n";
                receiptText += "----------------------------------------------------------------\n";
                 receiptText += "Customer Details:\n";
                receiptText += "Customer ID: " + resultSet.getString("CustomerID") + "\n";
                receiptText += "Name: " + resultSet.getString("Name") + "\n";
                receiptText += "ID Proof: " + resultSet.getString("IDProof") + "\n";
                receiptText += "Mobile Number: " + resultSet.getString("MobileNo") + "\n";
                receiptText += "Email Address: " + resultSet.getString("Email") + "\n";
                receiptText += "----------------------------------------------------------------\n";
                receiptText += "Room Details:\n";
                receiptText += "Room Number: " + resultSet.getString("RoomNo") + "\n";
                receiptText += "Room Type: " + resultSet.getString("RoomType") + "\n";
                receiptText += "Bed Type: " + resultSet.getString("BedType") + "\n";
                receiptText += "Price Per Day: " + resultSet.getString("PricePerDay") + "\n";
                receiptText += "\n--------------------------------------------------------------------------------------------\n";
                
                String checkInDate = resultSet.getString("CheckInDate");
                String checkOutDate = resultSet.getString("CheckOutDate");
                int noOfDaysStay = resultSet.getInt("NoOfDaysStay");
                double totalAmount = resultSet.getDouble("TotalAmount");

                String tableHeader = "|     Check-In Date        |    Check-Out Date       |  No of Days Stay   |  Total Amount  |\n";
                String tableRow = String.format("|    %-19s   |   %-19s   |     %-12d   |    %.2f       |\n", checkInDate, checkOutDate, noOfDaysStay, totalAmount);

                String table = tableHeader + tableRow ;

                receiptText += table;
                receiptText += "--------------------------------------------------------------------------------------------\n";
                receiptText += "\n\t\tThank you, Please visit Again!";

                File receiptFile = new File("receipt.txt");
                FileWriter writer = new FileWriter(receiptFile);
                writer.write(receiptText);
                writer.close();

                Desktop.getDesktop().open(receiptFile);

                JOptionPane.showMessageDialog(null, "Receipt generated successfully.", "Success", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(null, "Customer not found.", "Error", JOptionPane.ERROR_MESSAGE);
            }
            customerID = Integer.parseInt(resultSet.getString("CustomerID"));

            String deleteQuery = "DELETE FROM CustCheckIn WHERE CustomerID = ?";
            PreparedStatement deleteStatement = conn.prepareStatement(deleteQuery);
            deleteStatement.setInt(1, customerID);
            deleteStatement.executeUpdate();
            deleteStatement.close();

            int customerIDToRemove = Integer.parseInt(jTextField1.getText());
            int rowIndex = -1;
            DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
            for (int i = 0; i < model.getRowCount(); i++) {
                int id = Integer.parseInt(model.getValueAt(i, 0).toString()); 
                if (id == customerIDToRemove) {
                    rowIndex = i;
                    break;
                }
    }
            if (rowIndex >= 0) {
                model.removeRow(rowIndex);
            } else {
                JOptionPane.showMessageDialog(null, "Customer not found in the table.", "Error", JOptionPane.ERROR_MESSAGE);
            }

            String roomNumber = resultSet.getString("RoomNo");
            String updateQuery = "UPDATE Room SET RoomStatus = 'Not Booked' WHERE RoomNo = ?";
            PreparedStatement updateStatement = conn.prepareStatement(updateQuery);
            updateStatement.setString(1, roomNumber);
            updateStatement.executeUpdate();
            updateStatement.close();
            resultSet.close();
            statement.close();
            conn.close();
        } catch (Exception e) {
            e.printStackTrace();
        }   
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Payment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Payment payment = new Payment();
                payment.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);

                payment.setPreferredSize(new Dimension(1580, 710));

                payment.pack();

                Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
                int screenWidth = screenSize.width;
                int screenHeight = screenSize.height;

                int xPos = (screenWidth - payment.getWidth()) / 2;
                int yPos = (screenHeight - payment.getHeight()) / 2;

                payment.setLocation(xPos, yPos);
                payment.setVisible(true);
                payment.setTitle("Payment");
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
